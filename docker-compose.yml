version: "3.8"

services:
  # Banco de dados MySQL para desenvolvimento local
  mysql:
    image: mysql:8.0
    container_name: lol-matchmaking-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-lolmatchmaking}
      MYSQL_USER: ${MYSQL_USER:-loluser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-lolpass}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/main/resources/db:/docker-entrypoint-initdb.d
    networks:
      - lol-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Aplicação Spring Boot
  app:
    build:
      context: .
      dockerfile: Dockerfile.local
    container_name: lol-matchmaking-app
    environment:
      SPRING_PROFILES_ACTIVE: docker
      # Disable multi-backend sync in containerized deployment
      APP_BACKEND_SYNC_ENABLED: "false"
      MYSQL_HOST: ${MYSQL_HOST:-mysql}
      MYSQL_PORT: ${MYSQL_PORT:-3306}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-lolmatchmaking}
      MYSQL_USER: ${MYSQL_USER:-loluser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-lolpass}
      # Configurações para WebSocket e CORS
      BACKEND_URL: ${BACKEND_URL:-http://localhost:8080}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:8080}
      # Permitir que o container acesse o LCU no host (Windows/Mac)
      LCU_HOST: ${LCU_HOST:-host.docker.internal}
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - lol-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      # Para hot reload durante desenvolvimento
      - ./target/classes:/app/BOOT-INF/classes
      - ./src/main/java:/app/src/main/java
      - ./src/main/resources:/app/src/main/resources
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local

networks:
  lol-network:
    driver: bridge
